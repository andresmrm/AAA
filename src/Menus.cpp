#include "AAA.h"//------------------------------------------------------------------------------void preparar_matriz_bordasI(){	int i=0;		//NO	bordasI[ i ].x = 0;	bordasI[ i ].y = 0;	bordasI[ i ].w = 10;	bordasI[ i ].h = 10;	i++;	//N	bordasI[ i ].x = 10;	bordasI[ i ].y = 0;	bordasI[ i ].w = 70;	bordasI[ i ].h = 10;	i++;	//NE	bordasI[ i ].x = 80;	bordasI[ i ].y = 0;	bordasI[ i ].w = 10;	bordasI[ i ].h = 10;	i++;	//O	bordasI[ i ].x = 0;	bordasI[ i ].y = 10;	bordasI[ i ].w = 10;	bordasI[ i ].h = 70;	i++;	//Meio	bordasI[ i ].x = 10;	bordasI[ i ].y = 10;	bordasI[ i ].w = 70;	bordasI[ i ].h = 70;	i++;	//L                                     i = 5	bordasI[ i ].x = 80;	bordasI[ i ].y = 10;	bordasI[ i ].w = 10;	bordasI[ i ].h = 70;	i++;	//SO	bordasI[ i ].x = 0;	bordasI[ i ].y = 80;	bordasI[ i ].w = 10;	bordasI[ i ].h = 10;	i++;	//S	bordasI[ i ].x = 10;	bordasI[ i ].y = 80;	bordasI[ i ].w = 70;	bordasI[ i ].h = 10;	i++;	//SE	bordasI[ i ].x = 80;	bordasI[ i ].y = 80;	bordasI[ i ].w = 10;	bordasI[ i ].h = 10;	i++;	//Bordas das Informações do Terreno Selecionado	bordasI[ i ].x = 158;	bordasI[ i ].y = 0;	bordasI[ i ].w = 84;	bordasI[ i ].h = 38;	i++;	//Moldura para imagem 70x70                      i = 10	bordasI[ i ].x = 0;	bordasI[ i ].y = 90;	bordasI[ i ].w = 80;	bordasI[ i ].h = 80;	i++;	//Moldura para receber texto	bordasI[ i ].x = 0;	bordasI[ i ].y = 426;	bordasI[ i ].w = 480;	bordasI[ i ].h = 112;	i++;	//Lança (ícone)	bordasI[ i ].x = 94;	bordasI[ i ].y = 26;	bordasI[ i ].w = 2;	bordasI[ i ].h = 17;	i++;	//Arco (ícone)	bordasI[ i ].x = 92;	bordasI[ i ].y = 49;	bordasI[ i ].w = 9;	bordasI[ i ].h = 15;	i++;	//Ferradura (ícone)	bordasI[ i ].x = 93;	bordasI[ i ].y = 74;	bordasI[ i ].w = 8;	bordasI[ i ].h = 8;	i++;	//Casinha (ícone)                           i = 15	bordasI[ i ].x = 148;	bordasI[ i ].y = 49;	bordasI[ i ].w = 8;	bordasI[ i ].h = 8;	i++;	//Machado (ícone)	bordasI[ i ].x = 150;	bordasI[ i ].y = 60;	bordasI[ i ].w = 4;	bordasI[ i ].h = 7;	i++;	//Bola cheia (ícone)	bordasI[ i ].x = 149;	bordasI[ i ].y = 72;	bordasI[ i ].w = 6;	bordasI[ i ].h = 6;	i++;	//Bola vazia (ícone)	bordasI[ i ].x = 149;	bordasI[ i ].y = 81;	bordasI[ i ].w = 6;	bordasI[ i ].h = 6;	i++;	//Azul (ícone)	bordasI[ i ].x = 154;	bordasI[ i ].y = 22;	bordasI[ i ].w = 4;	bordasI[ i ].h = 4;	i++;	//Vermelho (ícone)                          i = 20	bordasI[ i ].x = 154;	bordasI[ i ].y = 26;	bordasI[ i ].w = 4;	bordasI[ i ].h = 4;	i++;	//Verde (ícone)	bordasI[ i ].x = 150;	bordasI[ i ].y = 26;	bordasI[ i ].w = 4;	bordasI[ i ].h = 4;	i++;	//Amarelo (ícone)	bordasI[ i ].x = 150;	bordasI[ i ].y = 22;	bordasI[ i ].w = 4;	bordasI[ i ].h = 4;	i++;	//Seleção	bordasI[ i ].x = 80;	bordasI[ i ].y = 90;	bordasI[ i ].w = 70;	bordasI[ i ].h = 70;	i++;	//Seleção 2	bordasI[ i ].x = 150;	bordasI[ i ].y = 90;	bordasI[ i ].w = 70;	bordasI[ i ].h = 70;	i++;	//Fundo GRANDE                                     i = 25	bordasI[ i ].x = 0;	bordasI[ i ].y = 170;	bordasI[ i ].w = 256;	bordasI[ i ].h = 256;	i++;}//------------------------------------------------------------------------------void desenhar_bordas(){	int i = 0;	int j = 0;		for( i = 0; i <= TAM_TELA_X+70; i+=70 )	{		aplicar_superficie( i + POS_TELA_X, 0, bordasImagem, tela, &bordasI[1] );		aplicar_superficie( i + POS_TELA_X, TAM_TELA_Y + POS_TELA_Y, bordasImagem, tela, &bordasI[7] );	}	for( i = 0; i <= TAM_TELA_Y+70; i+=70 )	{		aplicar_superficie( 0, i + POS_TELA_Y, bordasImagem, tela, &bordasI[3] );		aplicar_superficie( TAM_TELA_X + POS_TELA_X, i + POS_TELA_Y, bordasImagem, tela, &bordasI[5] );	}		aplicar_superficie( 0, 0, bordasImagem, tela, &bordasI[0] );	aplicar_superficie( TAM_TELA_X+POS_TELA_X, 0, bordasImagem, tela, &bordasI[2] );	aplicar_superficie( 0, TAM_TELA_Y+POS_TELA_Y, bordasImagem, tela, &bordasI[6] );	aplicar_superficie( TAM_TELA_X+POS_TELA_X, TAM_TELA_Y+POS_TELA_Y, bordasImagem, tela, &bordasI[8] );		for( i = 0; i <= TAM_TELA_X+70; i+=256 )	{		aplicar_superficie( i, TAM_TELA_Y + POS_TELA_Y*2, bordasImagem, tela, &bordasI[25] );	}	for( j = 0; j <= SCREEN_HEIGHT+70; j+=256 )	{				for( i = TAM_TELA_X+POS_TELA_X*2; i <= SCREEN_WIDTH+70; i+=256 )		{			aplicar_superficie( i, j, bordasImagem, tela, &bordasI[25] );		}	}}//------------------------------------------------------------------------------void preencher_fundo(){	int i = 0;	int j = 0;		for( j = 0; j <= SCREEN_HEIGHT; j+=256 )	{				for( i = 0; i <= SCREEN_WIDTH; i+=256 )		{			aplicar_superficie( i, j, bordasImagem, tela, &bordasI[25] );		}	}}//------------------------------------------------------------------------------int atalhos( int modo ){	// 1 - Tela do mapa	// 2 - Editor de tipos	// 3 - Info da unidade	// 4 - Info da cidade	// 5 - Editor de bônus	// 6 - Menu principal	// 7 - Menu de preparação para o jogo	// 8 - Menu no jogo	// 9 - Menu de magias	// 10- Menu de rede	// 11- Menu de espera por jogada	// 12- Tela de alvo para magia		int i = 0;		if( evento.key.keysym.sym == SDLK_F12 )// F12 - sair	{		/*		Confirmar		*/		var = -1;	}		if( evento.key.keysym.sym == SDLK_ESCAPE )// Esc - voltar	{		var = -2;	}	if( evento.key.keysym.sym == SDLK_F5 )// F5 - salvar	{		salvar();	}	if( evento.key.keysym.sym == SDLK_F8 )// F8 - carregar	{		carregar();	}		//Tela do mapa	if( evento.key.keysym.sym == SDLK_c && ( modo == 1 ) )// C - info da cidade	{		if( selecaoC > -1 && jogadorAtual == cidades[selecaoC].dono )		var = 1;	}	if( evento.key.keysym.sym == SDLK_u && ( modo == 1 ) )// U - info da unidade	{		if( selecaoP > -1 && jogadorAtual == unidades[selecaoP].dono )		var = 2;	}	if( evento.key.keysym.sym == SDLK_e && ( modo == 1 ) )// E - editor de tipos	{		var = 3;	}	if( evento.key.keysym.sym == SDLK_t && ( modo == 1 ) )// T - passar turno	{		passar_jogada( 1 );	}	//--------------------------------------------------------------------------		//Tela do mapa e Info da unidade	if( evento.key.keysym.sym == SDLK_m && ( modo == 1 || modo == 3 ) )// M - morar	{		if( selecaoP > -1 && unidades[selecaoP].dono == jogadorAtual )		{			selecaoC = procurar_cidade( selecaoX, selecaoY );					if( selecaoC == -1 )		{			criar_cidade( unidades[selecaoP].x, unidades[selecaoP].y, tipos[unidades[selecaoP].tipo].raca, unidades[selecaoP].dono, unidades[selecaoP].quantidade, racas[tipos[unidades[selecaoP].tipo].raca].tempoCid, 1 );		}		else		{			cidades[selecaoC].populacao = cidades[selecaoC].populacao + unidades[selecaoP].quantidade;		}		eliminar_pelotao( selecaoP );		procurar_pelotoes_xy( selecaoX, selecaoY );		selecaoC = procurar_cidade( selecaoX, selecaoY );		}			if( modo == 3 )		{			var = -2;		}	}		if( evento.key.keysym.sym == SDLK_a && ( modo == 1 || modo == 3 ) )// A - cortar árvores	{		if( selecaoP > -1 && unidades[selecaoP].dono == jogadorAtual )		{			cortar_arvores( unidades[selecaoP].x, unidades[selecaoP].y, selecaoP );		}	}		if( evento.key.keysym.sym == SDLK_q && ( modo == 1 || modo == 3 ) )// Q - queimar solo	{		if( selecaoP > -1 && unidades[selecaoP].dono == jogadorAtual )		{			queimar_vegetacao( unidades[selecaoP].x, unidades[selecaoP].y, selecaoP );		}	}		if( evento.key.keysym.sym == SDLK_s && ( modo == 1 || modo == 3 ) )// S - separar pelotão	{		if( selecaoP > -1 && unidades[selecaoP].dono == jogadorAtual )		{			i = receber_numero( 19, "Quantas unidades separar?" );			if( i < unidades[selecaoP].quantidade && i > 0 )			{				separar_pelotao( selecaoP, i );			}						if( modo == 3 )			{				var = -2;			}		}	}		if( evento.key.keysym.sym == SDLK_j && ( modo == 1 || modo == 3 ) )// J - juntar pelotão	{		if( selecaoP > -1 && unidades[selecaoP].dono == jogadorAtual )		{			i = procurar_pelotoes_para_juntar( unidades[selecaoP].x, unidades[selecaoP].y, unidades[selecaoP].tipo, unidades[selecaoP].dono, selecaoP );			if( i >= 0)			{				juntar_pelotao( selecaoP, i );				if( modo == 3 )				{					var = -2;				}			}		}	}		if( evento.key.keysym.sym == SDLK_f && ( modo == 1 || modo == 3 ) )// F - feitiços	{		if( selecaoP > -1 && unidades[selecaoP].dono == jogadorAtual )		{			var = 4;		}	}		//--------------------------------------------------------------------------    	//Editor de tipos	if( evento.key.keysym.sym == SDLK_DELETE && ( modo == 2 ) )// DELETE - deletar tipo	{		if( editando > -1 )		{			eliminar_tipo( editando );			editando = -1;			preparar_lista_treino( posLista, cidades[0], 1 );		}	}	//--------------------------------------------------------------------------		if( evento.key.keysym.sym == SDLK_k )// K - enviar mesagem	{		receber_texto( 38, "Mensagem:" );		mTexto_receber( aux2 );		novaSaida = 1;	}		if( evento.key.keysym.sym == SDLK_p )// P - enviar turno	{		novaSaida = 10;	}		if( evento.key.keysym.sym == SDLK_h )// H - ordenar tudo	{		ordenar_tipos();		ordenar_pelotoes();	}}//------------------------------------------------------------------------------int menu_no_jogo(){	int x = 0;	int y = 0;		var = 0;	while( var == 0 )	{		while( SDL_PollEvent( &evento ) )		{			if( evento.type == SDL_QUIT )			{				var = -1;			}						if( evento.type == SDL_MOUSEBUTTONUP )			{				x = 310;				y = 500;						//Novo jogo				if( botao( x+5, y+5, 27, 1 ) )				{					preparar_mapa();					var = 1;				}								//Sair				if( botao( x+305, y+5, 29, 1 ) ){var = -3;}								//Voltar				if( botao( 980, 724, 7, 5 ) ){var = -2;}			}						if( evento.type == SDL_KEYDOWN )			{				atalhos( 8 );			}		}				preencher_fundo();				x = 310;		y = 500;				//Novo jogo		escrever( x, y-20, "Regerar Mapa" );		aplicar_superficie( x, y, bordasImagem, tela, &bordasI[10] );		botao( x+5, y+5, 27, 0 );				//Sair		escrever( x+325, y-20, "Sair" );		aplicar_superficie( x+300, y, bordasImagem, tela, &bordasI[10] );		botao( x+305, y+5, 29, 0 );				botao( 980, 724, 7, 0 );//X vermelho			if( SDL_Flip( tela ) == -1 )		{			return 1;		}		controlar_frame();	}}//------------------------------------------------------------------------------int menu_preparar_jogo(){	int i = 0;	int x = 0;	int y = 0;	int num = 0;		var = 0;	while( var == 0 )	{		while( SDL_PollEvent( &evento ) )		{			if( evento.type == SDL_QUIT )			{				var = -1;			}						if( evento.type == SDL_MOUSEBUTTONUP )			{				x = 100;				y = 100;				//Floresta				if( botao( x+85, y+20, 33, 1 ) )				{					vegetacao[0] = receber_numero( 10, "Quantas florestas?" );				}				if( botao( x+85, y+40, 33, 1 ) )				{					vegetacao[1] = receber_numero( 10, "Tamanho das florestas:" );				}				if( botao( x+85, y+60, 33, 1 ) )				{					vegetacao[2] = receber_numero( 10, "Variação de tamanho entre elas:" );				}								//Relevo				if( botao( x+85, y+20+90, 33, 1 ) )				{					relevo[0] = receber_numero( 10, "Quantas cordilheiras?" );				}				if( botao( x+85, y+40+90, 33, 1 ) )				{					relevo[1] = receber_numero( 10, "Tamanho das cordilheiras:" );				}				if( botao( x+85, y+60+90, 33, 1 ) )				{					relevo[2] = receber_numero( 10, "Variação de tamanho entre elas:" );				}								//Deserto				if( botao( x+85, y+20+180, 33, 1 ) )				{					deserto[0] = receber_numero( 10, "Quantos desertos?" );				}				if( botao( x+85, y+40+180, 33, 1 ) )				{					deserto[1] = receber_numero( 10, "Tamanho dos desertos:" );				}				if( botao( x+85, y+60+180, 33, 1 ) )				{					deserto[2] = receber_numero( 10, "Variação de tamanho entre eles:" );				}								//Neve				if( botao( x+85, y+20+270, 33, 1 ) )				{					neve[0] = receber_numero( 10, "Quantas áreas de neve?" );				}				if( botao( x+85, y+40+270, 33, 1 ) )				{					neve[1] = receber_numero( 10, "Tamanho das áreas de neve:" );				}				if( botao( x+85, y+60+270, 33, 1 ) )				{					neve[2] = receber_numero( 10, "Variação de tamanho entre elas:" );				}								//--------------------------------------------------------------				x = 600;				y = 50;				//Número de Jogadores				if( botao( x, y, 12, 1 ) && numJogadoresUsados < numJogadores )				{					numJogadoresUsados++;				}				if( botao( x, y + 20, 13, 1 ) && numJogadoresUsados > 1 )				{					numJogadoresUsados--;				}								//--------------------------------------------------------------								x = 400;				y = 100;								for( i = 0; i < numJogadoresUsados; i++ )				{					if( botao( x - 20, y + 20 + i*90, 12, 1 ) && jogadores[i].raca < numRacasUsadas - 1 )					{						jogadores[i].raca++;					}					if( botao( x - 20, y + 40 + i*90, 13, 1 ) && jogadores[i].raca > 0 )					{						jogadores[i].raca--;					}					if( botao( x+85, y + 20 + i*90, 33, 1 ) )					{						receber_texto( 19, "Nome do jogador:" );						strcpy( jogadores[i].nome, aux2 );					}					if( botao( x+85, y + 40 + i*90, 33, 1 ) )					{						jogadores[i].materiais = receber_numero( 10, "Quantidade de materias iniciais:" );					}					if( botao( x+85, y + 60 + i*90, 33, 1 ) )					{						jogadores[i].populacao = receber_numero( 10, "Quantidade de população inicial:" );					}					if( botao( x+250, y + 40 + i*90, 33, 1 ) )					{						num = receber_numero( 10, "Posição X inicial:" );						if( num >= 0 && num < TAM_MAPA_X )						{							jogadores[i].x = num;						}						num = 0;					}					if( botao( x+250, y + 60 + i*90, 33, 1 ) )					{						num = receber_numero( 10, "Posição Y inicial:" );						if( num >= 0 && num < TAM_MAPA_Y )						{							jogadores[i].y = num;						}						num = 0;					}				}								x = 100;				y = 500;				//Novo jogo				if( botao( x+5, y+5, 27, 1 ) ){var = 1;}								//Voltar				if( botao( 980, 724, 7, 5 ) ){var = -2;}			}						if( evento.type == SDL_KEYDOWN )			{				atalhos( 7 );			}		}				preencher_fundo();				x = 100;		y = 100;		strcpy( aux, "Mapa: " );		itoa( TAM_MAPA_X, aux2, 10);		strcat( aux, aux2 );		strcat( aux, " X " );		itoa( TAM_MAPA_Y, aux2, 10);		strcat( aux, aux2 );		escrever( x, y-50, aux, fonte20 );				//Florestas		aplicar_superficie( x, y, bordasImagem, tela, &bordasI[10] );		aplicar_superficie( x+5, y+5, terrenosImagem, tela, &terrenosI[3] );		aplicar_superficie( x+5, y+5, terrenosImagem, tela, &terrenosI[14] );		escrever( x+85, y+1, "Florestas:" , fonte12 );				botao( x+85, y+20, 33, 0 );		strcpy( aux, "Número: " );		itoa( vegetacao[0], aux2, 10);		strcat( aux, aux2 );		escrever( x+110, y+21, aux );				botao( x+85, y+40, 33, 0 );		strcpy( aux, "Tamanho: " );		itoa( vegetacao[1], aux2, 10);		strcat( aux, aux2 );		escrever( x+110, y+41, aux );				botao( x+85, y+60, 33, 0 );		strcpy( aux, "Variação: " );		itoa( vegetacao[2], aux2, 10);		strcat( aux, aux2 );		escrever( x+110, y+61, aux );				//Relevo		aplicar_superficie( x, y+90, bordasImagem, tela, &bordasI[10] );		aplicar_superficie( x+5, y+95, terrenosImagem, tela, &terrenosI[0] );		aplicar_superficie( x+5, y+95, terrenosImagem, tela, &terrenosI[17] );		escrever( x+85, y+91, "Relevo:" , fonte12 );				botao( x+85, y+20+90, 33, 0 );		strcpy( aux, "Número: " );		itoa( relevo[0], aux2, 10);		strcat( aux, aux2 );		escrever( x+110, y+21+90, aux );				botao( x+85, y+40+90, 33, 0 );		strcpy( aux, "Tamanho: " );		itoa( relevo[1], aux2, 10);		strcat( aux, aux2 );		escrever( x+110, y+41+90, aux );				botao( x+85, y+60+90, 33, 0 );		strcpy( aux, "Variação: " );		itoa( relevo[2], aux2, 10);		strcat( aux, aux2 );		escrever( x+110, y+61+90, aux );				//Deserto		aplicar_superficie( x, y+180, bordasImagem, tela, &bordasI[10] );		aplicar_superficie( x+5, y+185, terrenosImagem, tela, &terrenosI[11] );		escrever( x+85, y+181, "Deserto:" , fonte12 );				botao( x+85, y+20+180, 33, 0 );		strcpy( aux, "Número: ");		itoa( deserto[0], aux2, 10);		strcat( aux, aux2);		escrever( x+110, y+21+180, aux );				botao( x+85, y+40+180, 33, 0 );		strcpy( aux, "Tamanho: ");		itoa( deserto[1], aux2, 10);		strcat( aux, aux2);		escrever( x+110, y+41+180, aux );				botao( x+85, y+60+180, 33, 0 );		strcpy( aux, "Variação: ");		itoa( deserto[2], aux2, 10);		strcat( aux, aux2);		escrever( x+110, y+61+180, aux );				//Neve		aplicar_superficie( x, y+270, bordasImagem, tela, &bordasI[10] );		aplicar_superficie( x+5, y+275, terrenosImagem, tela, &terrenosI[7] );		escrever( x+85, y+271, "Neve:" , fonte12 );				botao( x+85, y+20+270, 33, 0 );		strcpy( aux, "Número: ");		itoa( neve[0], aux2, 10);		strcat( aux, aux2);		escrever( x+110, y+21+270, aux );				botao( x+85, y+40+270, 33, 0 );		strcpy( aux, "Tamanho: ");		itoa( neve[1], aux2, 10);		strcat( aux, aux2);		escrever( x+110, y+41+270, aux );				botao( x+85, y+60+270, 33, 0 );		strcpy( aux, "Variação: ");		itoa( neve[2], aux2, 10);		strcat( aux, aux2);		escrever( x+110, y+61+270, aux );		//----------------------------------------------------------------------				x = 600;		y = 50;				strcpy( aux, "Quantidade: ");		itoa( numJogadoresUsados, aux2, 10);		strcat( aux, aux2);		escrever( x+25, y+10, aux );		botao( x, y, 12, 0 );		botao( x, y + 20, 13, 0 );				x = 400;		y = 100;		escrever( x, y-50, "Jogadores" , fonte20 );				for( i = 0; i < numJogadoresUsados; i++ )		{			botao( x - 20, y + 20 + i*90, 12, 0 );			botao( x - 20, y + 40 + i*90, 13, 0 );			aplicar_superficie( x, y + i*90, bordasImagem, tela, &bordasI[10] );			aplicar_superficie( x+5, y+5 + i*90, cidadesImagem, tela, &cidadesI[jogadores[i].raca] );						strcpy( aux, "Raça: " );			strcat( aux, racas[jogadores[i].raca].nome );			escrever( x+85, y + 1 + i*90, aux );						botao( x+85, y + 20 + i*90, 33, 0 );			strcpy( aux, "Nome: " );			strcat( aux, jogadores[i].nome );			escrever( x+110, y + 21 + i*90, aux );						botao( x+85, y + 40 + i*90, 33, 0 );			strcpy( aux, "Materiais: ");			itoa( jogadores[i].materiais, aux2, 10);			strcat( aux, aux2);			escrever( x+110, y + 41 + i*90, aux );						botao( x+85, y + 60 + i*90, 33, 0 );			strcpy( aux, "População: ");			itoa( jogadores[i].populacao, aux2, 10);			strcat( aux, aux2);			escrever( x+110, y + 61 + i*90, aux );						botao( x+250, y + 40 + i*90, 33, 0 );			strcpy( aux, "PosiçãoX: ");			itoa( jogadores[i].x, aux2, 10);			strcat( aux, aux2);			escrever( x+280, y + 41 + i*90, aux );						botao( x+250, y + 60 + i*90, 33, 0 );			strcpy( aux, "PosiçãoY: ");			itoa( jogadores[i].y, aux2, 10);			strcat( aux, aux2);			escrever( x+280, y + 61 + i*90, aux );		}		//----------------------------------------------------------------------				x = 100;		y = 500;		//Novo jogo		escrever( x+10, y-20, "Começar" );		aplicar_superficie( x, y, bordasImagem, tela, &bordasI[10] );		botao( x+5, y+5, 27, 0 );				botao( 980, 724, 7, 0 );//X vermelho				if( SDL_Flip( tela ) == -1 )		{			return 1;		}		controlar_frame();	}	}//------------------------------------------------------------------------------int menu_carregar_jogo(){	int x = 0;	int y = 0;				var = 0;	while( var == 0 )	{		while( SDL_PollEvent( &evento ) )		{		if( evento.type == SDL_QUIT )		{			var = -1;		}				if( evento.type == SDL_MOUSEBUTTONUP )		{						x = 310;			y = 500;				//Novo jogo			if( botao( x+5, y+5, 27, 1 ) ){var = 1;}						//Voltar			if( botao( 980, 724, 7, 5 ) ){var = -2;}		}		}				preencher_fundo();				x = 310;		y = 500;				//Novo jogo		aplicar_superficie( x, y, bordasImagem, tela, &bordasI[10] );		botao( x+5, y+5, 28, 0 );				botao( 980, 724, 7, 0 );//X vermelho				if( SDL_Flip( tela ) == -1 )		{			return 1;		}		controlar_frame();	}}//------------------------------------------------------------------------------int menu_preferencias(){	int x = 0;	int y = 0;		var = 0;	while( var == 0 )	{		while( SDL_PollEvent( &evento ) )		{			if( evento.type == SDL_QUIT )			{				var = -1;			}						if( evento.type == SDL_MOUSEBUTTONUP )			{								x = 310;				y = 500;						//Novo jogo				if( botao( x+5, y+5, 27, 1 ) ){var = 1;}								//Voltar				if( botao( 980, 724, 7, 5 ) ){var = -2;}			}		}				preencher_fundo();				x = 310;		y = 500;				//Novo jogo		aplicar_superficie( x, y, bordasImagem, tela, &bordasI[10] );		botao( x+5, y+5, 30, 0 );				botao( 980, 724, 7, 0 );//X vermelho				if( SDL_Flip( tela ) == -1 )		{			return 1;		}		controlar_frame();	}}//------------------------------------------------------------------------------int menu_rede(){	int x = 0;	int y = 0;		var = 0;	while( var == 0 )	{		while( SDL_PollEvent( &evento ) )		{			if( evento.type == SDL_QUIT )			{				var = -1;			}						if( evento.type == SDL_MOUSEBUTTONUP )			{				x = 400;				y = 100;				//Servidor				if( botao( x+5, y+5, 27, 1 ) ){var = 1;}				//Cliente				if( botao( x+105, y+5, 28, 1 ) ){var = 2;}								x = 400;				y = 200;				if( botao( x, y, 33, 1 ) )				{					receber_texto( 19, "IP do servidor:" );					strcpy( ipProcuradoNome, aux2 );				}				if( botao( x, y + 30, 33, 1 ) )				{					PortaRede = receber_numero( 4, "PORTA do servidor:" );				}								//Voltar				if( botao( 980, 724, 7, 5 ) ){var = -2;}			}						if( evento.type == SDL_KEYDOWN )			{				atalhos( 10 );			}		}				preencher_fundo();				x = 400;		y = 100;		//Servidor		escrever( x+15, y-20, "Servidor" );		aplicar_superficie( x, y, bordasImagem, tela, &bordasI[10] );		botao( x+5, y+5, 27, 0 );		//Cliente		escrever( x+120, y-20, "Cliente" );		aplicar_superficie( x+100, y, bordasImagem, tela, &bordasI[10] );		botao( x+105, y+5, 28, 0 );				x = 400;		y = 200;		botao( x, y, 33, 0 );		strcpy( aux, "IP: " );		strcat( aux, ipProcuradoNome );		escrever( x+25, y, aux );		botao( x, y + 30, 33, 0 );		strcpy( aux, "Porta: " );		itoa( PortaRede, aux2, 10 );		strcat( aux, aux2 );		escrever( x+25, y + 30, aux );				botao( 980, 724, 7, 0 );//X vermelho				mRede_imprimir( 25, 25, 0 );		mTexto_imprimir( 650, 100, 0 );				if( SDL_Flip( tela ) == -1 )		{		return 1;		}				controlar_frame();	}}//------------------------------------------------------------------------------int menu_espera_jogada(){	int x = 0;	int y = 0;	int marca = 0;		esperaOnline = 1;		var = 0;	while( var == 0 && esperaOnline == 1 )	{		if( novaSaida != 2 && marca == 0 )		{			mRede_receber( "Esperando vez de jogar..." );			marca = 1;		}				while( SDL_PollEvent( &evento ) )		{			if( evento.type == SDL_QUIT )			{				var = -1;			}					if( evento.type == SDL_MOUSEBUTTONUP )			{								x = 500;				y = 200;						/*//Servidor				if( botao( x+5, y+5, 27, 1 ) ){var = 1;}				//Cliente				if( botao( x+105, y+5, 28, 1 ) ){var = 2;}								//Voltar				if( botao( 980, 724, 7, 5 ) ){var = -2;}*/			}						if( evento.type == SDL_KEYDOWN )			{				atalhos( 11 );			}		}				preencher_fundo();				x = 500;		y = 200;				/*//Servidor		aplicar_superficie( x, y, bordasImagem, tela, &bordasI[10] );		botao( x+5, y+5, 27, 0 );				//Cliente		aplicar_superficie( x+100, y, bordasImagem, tela, &bordasI[10] );		botao( x+105, y+5, 28, 0 );				botao( 980, 724, 7, 0 );//X vermelho*/				mRede_imprimir( 50, 50, 0 );		mTexto_imprimir( 500, 400, 0 );				if( SDL_Flip( tela ) == -1 )		{			return 1;		}				controlar_frame();	}}//------------------------------------------------------------------------------void creditos(){	int x = 0;	int y = 200;	int yIncre = -1;	int incre = 20;	int i = 0;	int FPS;		var = 0;	while( var == 0 )	{		while( SDL_PollEvent( &evento ) )		{			if( evento.type == SDL_QUIT )			{				var = -1;			}			if( evento.type == SDL_KEYDOWN )			{				atalhos( 6 );			}		}				preencher_fundo();				i = 0;		escrever_centro( y+i*incre, "A A A", fonte26 );i++;i++;				escrever_centro( y+i*incre, "O MELHOR jogo do mundo", fonte16 );i++;i++;i++;i++;i++;i++;								escrever_centro( y+i*incre, "Produção", fonte20 );i++;i++;				escrever_centro( y+i*incre, "Produtor", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Diretor Criativo", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Consultor Criativo", fonte16 );i++;		escrever_centro( y+i*incre, "Matheus Lin Truglio Alvarenga", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Diretor de Arte", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Designer de Mapas", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Designer de Jogo", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Programador Chefe", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Consultor de Programação", fonte16 );i++;		escrever_centro( y+i*incre, "Laércio da Cruz Asano Júnior", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Diretor de Animações", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Designer de Ambiente de Mapas", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;i++;i++;				escrever_centro( y+i*incre, "Audio", fonte20 );i++;i++;		escrever_centro( y+i*incre, "Diretor de Som", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Diretor de Música", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Supervisor de Som e Música", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Engenheiro de Audio", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Disigner de Sons", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;i++;i++;				escrever_centro( y+i*incre, "Marketing", fonte20 );i++;i++;		escrever_centro( y+i*incre, "Diretor de Marketing", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Coordenador de Marketing", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Supervisor do Grupo de Criação Artística de Marketing", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;i++;i++;				escrever_centro( y+i*incre, "Rede e Online", fonte20 );i++;i++;		escrever_centro( y+i*incre, "Diretor do Grupo de Tecnologia Online", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Diretor do Grupo de Desenvolvimento Avançado de Redes", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Consultor do Grupo de Desenvolvimento Avançado de Redes", fonte16 );i++;		escrever_centro( y+i*incre, "Leonardo Lourenço Crespilho", fonte12 );i++;i++;i++;i++;				escrever_centro( y+i*incre, "Legal", fonte20 );i++;i++;		escrever_centro( y+i*incre, "Conselheiro Legal", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Controlador de Custo", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;i++;i++;				escrever_centro( y+i*incre, "Controle de Qualidade", fonte20 );i++;i++;		escrever_centro( y+i*incre, "Diretor de Testes", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;i++;		escrever_centro( y+i*incre, "Testers", fonte16 );i++;		escrever_centro( y+i*incre, "Andrés M. R. Martano", fonte12 );i++;		escrever_centro( y+i*incre, "José Francisco Sati Jr", fonte12 );i++;		escrever_centro( y+i*incre, "Laércio da Cruz Asano Júnior", fonte12 );i++;		escrever_centro( y+i*incre, "Tiago Casagrande de Paula", fonte12 );i++;		escrever_centro( y+i*incre, "Vinicius Mendes Madisson", fonte12 );i++;i++;i++;i++;				escrever_centro( y+i*incre, "Agradecimentos", fonte20 );i++;i++;		escrever_centro( y+i*incre, "SDL", fonte16 );i++;		escrever_centro( y+i*incre, "Lazy Foo", fonte16 );i++;		escrever_centro( y+i*incre, "Heroes of Might and Magic", fonte16 );i++;		escrever_centro( y+i*incre, "Lucas Kanebley Tavares", fonte16 );i++;i++;i++;i++;			escrever_centro( y+i*incre, "Colaborações", fonte20 );i++;i++;		escrever_centro( y+i*incre, "....", fonte16 );i++;						SDL_Flip( tela );				Uint8 *keystates = SDL_GetKeyState( NULL );		if( keystates[ SDLK_UP ] && telaY > 0 )		yIncre++;		if( keystates[ SDLK_DOWN ] && telaY < TAM_MAPA_Y * 70 - TAM_TELA_Y )		yIncre--;				y = y + yIncre;				FPS = 30;		tempo2 = SDL_GetTicks();		tempo = tempo2-tempo;		if( tempo < 1000 / FPS)		{			SDL_Delay( ( 1000 / FPS) - tempo );		}		tempo = SDL_GetTicks();	}}//------------------------------------------------------------------------------int menu_principal(){	int x = 0;	int y = 0;		var = 0;	while( var == 0 )	{		while( SDL_PollEvent( &evento ) )		{			if( evento.type == SDL_QUIT )			{				var = -1;			}						if( evento.type == SDL_MOUSEBUTTONUP )			{								x = 250;				y = 400;								//Novo jogo				if( botao( x+5, y+5, 27, 1 ) ){var = 1;}								//REDE				if( botao( x+105, y+5, 27, 1 ) ){var = 5;}								//Carregar jogo				if( botao( x+205, y+5, 28, 1 ) ){var = 2;}								//Preferências				if( botao( x+305, y+5, 30, 1 ) ){var = 3;}								//Sair				if( botao( x+405, y+5, 29, 1 ) ){var = -1;}								//Créditos				if( botao( x+505, y+5, 29, 1 ) ){var = 4;}			}						if( evento.type == SDL_KEYDOWN )			{				atalhos( 6 );			}		}				preencher_fundo();				x = 250;		y = 400;				//Novo jogo		escrever( x+8, y-20, "Novo Jogo" );		aplicar_superficie( x, y, bordasImagem, tela, &bordasI[10] );		botao( x+5, y+5, 27, 0 );				//REDE		escrever( x+106, y-20, "Criar Rede" );		aplicar_superficie( x+100, y, bordasImagem, tela, &bordasI[10] );		botao( x+105, y+5, 27, 0 );				//Carregar jogo		escrever( x+203, y-20, "#Carregar#" );		aplicar_superficie( x+200, y, bordasImagem, tela, &bordasI[10] );		botao( x+205, y+5, 28, 0 );				//Preferências		escrever( x+295, y-20, "#Preferências#" );		aplicar_superficie( x+300, y, bordasImagem, tela, &bordasI[10] );		botao( x+305, y+5, 30, 0 );				//Sair		escrever( x+425, y-20, "Sair" );		aplicar_superficie( x+400, y, bordasImagem, tela, &bordasI[10] );		botao( x+405, y+5, 29, 0 );						if( SDL_Flip( tela ) == -1 )		{			return 1;		}		controlar_frame();	}}//------------------------------------------------------------------------------